// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220816233520_GeneralRefactor")]
    partial class GeneralRefactor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6709),
                            Token = "81a130d2-502f-4cf1-a376-63edeb000e9f",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6713),
                            Token = "67c5064b-7160-4d05-a62e-1799f0d13270",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6731),
                            Token = "3e0dd8df-124d-4aba-aaa6-acf65c5d5002",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6733),
                            Token = "36030900-f547-44f7-bcb8-ee96cf7143f3",
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6735),
                            Token = "335a86dd-bc56-4e01-886d-6e34ba02bb44",
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6737),
                            Token = "30727c24-b440-4dac-84df-0c18cc35c892",
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6739),
                            Token = "78b64cd9-e5e0-43ba-ae02-63daf5d47551",
                            UserId = 8
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6752),
                            Token = "3ae397b8-61ee-4f10-894b-e44b93177b46",
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6754),
                            Token = "7db3b2a2-c9f4-4a69-9cea-366573256a81",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 183, DateTimeKind.Local).AddTicks(5505),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 183, DateTimeKind.Local).AddTicks(5538),
                            Email = "admin@mail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$qtjAq1EZNtpXGYJS2SnudeZlVDqnPVMSk6zhOH/z4cowLhlieFjKa",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 326, DateTimeKind.Local).AddTicks(7826),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 326, DateTimeKind.Local).AddTicks(7881),
                            Email = "operator@mail.com",
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$r6Nece1JqpKADBzaPhWzWusWW3K6tWUS6p6uzaj86gswMmhJK2AAW",
                            RoleId = 2,
                            Username = "Operator"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 471, DateTimeKind.Local).AddTicks(5522),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 471, DateTimeKind.Local).AddTicks(5579),
                            Email = "pippo@mail.com",
                            FirstName = "Jonh",
                            LastName = "Doe",
                            Password = "$2a$11$ib32gCvuBavXY/J2995Q2Op5p2XsHiqZay/rQmRgLeHmCF7g2bj76",
                            RoleId = 2,
                            Username = "Pippo"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 615, DateTimeKind.Local).AddTicks(7385),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 615, DateTimeKind.Local).AddTicks(7414),
                            Email = "keshaun@dickens.com",
                            FirstName = "Arnold",
                            LastName = "Bogan",
                            Password = "$2a$11$QbBJigserDoJcEGMny4VNO0/08uwA6YloFd09ImJoVydR1FLzi6zK",
                            RoleId = 2,
                            Username = "mckenzie"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 757, DateTimeKind.Local).AddTicks(9274),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 757, DateTimeKind.Local).AddTicks(9294),
                            Email = "domenick@beatty.info",
                            FirstName = "Craig",
                            LastName = "Rempel",
                            Password = "$2a$11$AR0PPmXpDfxgVX5y8UxPO.jQhLW.uUMxuh7cY8jpRnXqXRH8g.t7i",
                            RoleId = 2,
                            Username = "mellie.jewess"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 19, 901, DateTimeKind.Local).AddTicks(6410),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 19, 901, DateTimeKind.Local).AddTicks(6436),
                            Email = "rachelle@prohaska.info",
                            FirstName = "Annabelle",
                            LastName = "Moen",
                            Password = "$2a$11$xkJ3CUJox6vuhijOPSdlQOHFr4VSBJ4pWTDnxGFPPLrhVLLQfL7RC",
                            RoleId = 2,
                            Username = "cary_schmeler"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 49, DateTimeKind.Local).AddTicks(3416),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 20, 49, DateTimeKind.Local).AddTicks(3441),
                            Email = "haleigh@torphy.uk",
                            FirstName = "Edgar",
                            LastName = "Hagenes",
                            Password = "$2a$11$D85xqaJAHrOXEZ77Kd.TgO7WPNk9N61ucJhMrUU85Ydgv3Hy6.2OG",
                            RoleId = 2,
                            Username = "fermin.hermiston"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 191, DateTimeKind.Local).AddTicks(3980),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 20, 191, DateTimeKind.Local).AddTicks(4002),
                            Email = "araceli@johnstonterry.ca",
                            FirstName = "Alfonso",
                            LastName = "West",
                            Password = "$2a$11$bRQxy1lqoyhISBHILuzkyut6ccPuwBFvFOgupOzVyZEKUjSaQihu6",
                            RoleId = 2,
                            Username = "ivory.dickinson"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 333, DateTimeKind.Local).AddTicks(3570),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 20, 333, DateTimeKind.Local).AddTicks(3591),
                            Email = "elmer_beatty@strackelesch.ca",
                            FirstName = "Alexander",
                            LastName = "Gusikowski",
                            Password = "$2a$11$cB2y73vs6p4wJtuyRfiyWujFqmz050eE0Z9Y9XnQSGwiisej96qcG",
                            RoleId = 2,
                            Username = "kenyatta.goodwin"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6385),
                            DateOfBirth = new DateTime(2022, 8, 17, 1, 35, 20, 475, DateTimeKind.Local).AddTicks(6408),
                            Email = "laury.orn@schinnerweimann.us",
                            FirstName = "Otto",
                            LastName = "Heidenreich",
                            Password = "$2a$11$ZYrBqLn3Z0cLRtQlVOyFMe4HZBCwII3e92GEGZXM44r8/vuDTOcd6",
                            RoleId = 2,
                            Username = "marianne_mckenzie"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Metalabel")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMetas");
                });

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.HasOne("api.Model.Entity.Giustification", "Giustification")
                        .WithMany("Actions")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("api.Model.Entity.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.HasOne("api.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("UserMetas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");

                    b.Navigation("UserMetas");
                });
#pragma warning restore 612, 618
        }
    }
}
