// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220730113536_UpdateUser")]
    partial class UpdateUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("token")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1478),
                            UserId = 2,
                            token = "81a130d2-502f-4cf1-a376-63edeb000e9f"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1482),
                            UserId = 3,
                            token = "67c5064b-7160-4d05-a62e-1799f0d13270"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1507),
                            UserId = 4,
                            token = "d6485ed0-4b16-4f51-9f83-114350e5bcfb"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1509),
                            UserId = 5,
                            token = "048326d2-7548-47d8-aef8-16845fba8689"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1510),
                            UserId = 6,
                            token = "16a994d9-3355-4b8e-a5eb-bf0823d8a287"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1524),
                            UserId = 7,
                            token = "f43ab6ae-9922-4366-922d-2ca88b659f89"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1526),
                            UserId = 8,
                            token = "704ba4d6-9fe6-483b-a6ac-35047bebae57"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1528),
                            UserId = 9,
                            token = "3c6d55fb-8782-4fef-a797-aeb6f97d8ffc"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1533),
                            UserId = 10,
                            token = "a1ed8645-5167-48fd-a176-32af86b71901"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 74, DateTimeKind.Local).AddTicks(8204),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 74, DateTimeKind.Local).AddTicks(8245),
                            Email = "admin@mail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$Zl/t2IrA9r9HzZ7Oex83Ounlj5N.ZoI3G4xegiTGK.xFDs/isq3Vi",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 219, DateTimeKind.Local).AddTicks(7465),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 219, DateTimeKind.Local).AddTicks(7528),
                            Email = "operator@mail.com",
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$t0jSlVLpmGZGOpau.e5Ftuxfigieyvkf.NhzNXeRr3WFjevhVR7vi",
                            RoleId = 2,
                            Username = "Operator"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 364, DateTimeKind.Local).AddTicks(8857),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 364, DateTimeKind.Local).AddTicks(8927),
                            Email = "pippo@mail.com",
                            FirstName = "Jonh",
                            LastName = "Doe",
                            Password = "$2a$11$DrXNXKqX2xTwHSrsC3wYg.D2UUJtATspauF2rxkMOQZ2UeU9aeNOW",
                            RoleId = 2,
                            Username = "Pippo"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 510, DateTimeKind.Local).AddTicks(6719),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 510, DateTimeKind.Local).AddTicks(6741),
                            Email = "jolie.kovacek@stracke.biz",
                            FirstName = "Rhett",
                            LastName = "Goyette",
                            Password = "$2a$11$XvkuB463MlUPzf9P1mmxtOibQQXn/gvslJQg1S7QVgpDFcV8Nre5K",
                            RoleId = 2,
                            Username = "jordan.rath"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 661, DateTimeKind.Local).AddTicks(4430),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 661, DateTimeKind.Local).AddTicks(4452),
                            Email = "torey@hintz.ca",
                            FirstName = "Julien",
                            LastName = "Braun",
                            Password = "$2a$11$rRIC4ngfJxE0001kHAVs5uxpYjyiFgcKo8L6WFjrJptZo3RVCXUbe",
                            RoleId = 2,
                            Username = "rosamond"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 805, DateTimeKind.Local).AddTicks(9354),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 805, DateTimeKind.Local).AddTicks(9381),
                            Email = "garth@ryan.biz",
                            FirstName = "Bria",
                            LastName = "Hettinger",
                            Password = "$2a$11$Blv6rLGFW2MsPa1snXNgxOq2pFd9PcwLzMwZnAtjKVZkPekse36d.",
                            RoleId = 2,
                            Username = "karina.carroll"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 35, 950, DateTimeKind.Local).AddTicks(5464),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 35, 950, DateTimeKind.Local).AddTicks(5483),
                            Email = "franco@ritchie.ca",
                            FirstName = "Harrison",
                            LastName = "Lebsack",
                            Password = "$2a$11$WJ/TSFNslcWPC2hDjTErvu/UMomZ.76nmU2JuRzh07NS.j5lJo2gC",
                            RoleId = 2,
                            Username = "sigrid_paucek"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 95, DateTimeKind.Local).AddTicks(1585),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 36, 95, DateTimeKind.Local).AddTicks(1609),
                            Email = "justine.hermiston@powlowskiwaters.co.uk",
                            FirstName = "Liana",
                            LastName = "Harber",
                            Password = "$2a$11$nCpMT031hYjzeb4dRm44uO8jtoADLudP/cB.rxV3EeqqXpBahyapi",
                            RoleId = 2,
                            Username = "leatha_windler"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 240, DateTimeKind.Local).AddTicks(1342),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 36, 240, DateTimeKind.Local).AddTicks(1370),
                            Email = "denis@langbauch.us",
                            FirstName = "Zula",
                            LastName = "Shields",
                            Password = "$2a$11$KvZdWulca.WDqIa1yYU.Q.6ggZ68tnFX068J0eRlJ9RpGexK8XI3u",
                            RoleId = 2,
                            Username = "frederik.mann"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1017),
                            DateOfBirth = new DateTime(2022, 7, 30, 13, 35, 36, 385, DateTimeKind.Local).AddTicks(1041),
                            Email = "alf_grimes@hermiston.name",
                            FirstName = "Waino",
                            LastName = "Bernhard",
                            Password = "$2a$11$COgQwUzERD3HxCFV.LIVx.eR.ZPnkEgH.8sNM.CFTlZ7GtmAZNvLS",
                            RoleId = 2,
                            Username = "spencer_hilll"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("metaLabel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMetas");
                });

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.HasOne("api.Model.Entity.Giustification", "Giustification")
                        .WithMany("Activitis")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("api.Model.Entity.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.HasOne("api.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("UserMetas")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Navigation("Activitis");
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");

                    b.Navigation("UserMetas");
                });
#pragma warning restore 612, 618
        }
    }
}
