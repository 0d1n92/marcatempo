// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220806153241_UserUpdate")]
    partial class UserUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("token")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2285),
                            UserId = 2,
                            token = "81a130d2-502f-4cf1-a376-63edeb000e9f"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2288),
                            UserId = 3,
                            token = "67c5064b-7160-4d05-a62e-1799f0d13270"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2307),
                            UserId = 4,
                            token = "b936fb76-2be4-4423-8299-c7e084e75a9c"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2309),
                            UserId = 5,
                            token = "4bfa4dda-356e-460a-b03f-71850d69eabc"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2321),
                            UserId = 6,
                            token = "29088189-957f-4a6b-887b-818e879dfe0e"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2323),
                            UserId = 7,
                            token = "a36d8ed2-1b34-476d-aa4b-185995c92f44"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2325),
                            UserId = 8,
                            token = "72fa217e-d3e6-4614-afea-be2e9abb84e7"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2327),
                            UserId = 9,
                            token = "2d715fe2-4a53-4c04-a595-c29a87e9bd9e"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(2328),
                            UserId = 10,
                            token = "6919b7a9-e5e6-4871-9bf8-38c33329ed69"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 39, 938, DateTimeKind.Local).AddTicks(5044),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 39, 938, DateTimeKind.Local).AddTicks(5078),
                            Email = "admin@mail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$e/16/tKRGgcNXRoo8McLyedGIUXmCzRyzu4SF45y5a4cUv/5j54qq",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 80, DateTimeKind.Local).AddTicks(3580),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 80, DateTimeKind.Local).AddTicks(3644),
                            Email = "operator@mail.com",
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$w8Aaj5kmzqjtQT.1F3k0HOCivEpGis8maBYXtevzOmvaC..B7Us1u",
                            RoleId = 2,
                            Username = "Operator"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 224, DateTimeKind.Local).AddTicks(1415),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 224, DateTimeKind.Local).AddTicks(1446),
                            Email = "pippo@mail.com",
                            FirstName = "Jonh",
                            LastName = "Doe",
                            Password = "$2a$11$U045xWyqFkCLaxtuPAa1ROeXR7ODlNm47J8Jvil23E7JNSjeBK3yO",
                            RoleId = 2,
                            Username = "Pippo"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 368, DateTimeKind.Local).AddTicks(3593),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 368, DateTimeKind.Local).AddTicks(3651),
                            Email = "chester_murphy@wolffconn.us",
                            FirstName = "Emma",
                            LastName = "Johnston",
                            Password = "$2a$11$W2UMOADMBR.O5dWM/ixceOaYSG0Y7jlOfqLpdHcNhDb9XKj8/k0j2",
                            RoleId = 2,
                            Username = "logan"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 511, DateTimeKind.Local).AddTicks(245),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 511, DateTimeKind.Local).AddTicks(264),
                            Email = "frank.block@braun.ca",
                            FirstName = "Darren",
                            LastName = "Becker",
                            Password = "$2a$11$1FCMIKL1Vl.dwJkObcukNuEjp.X6ggFKr0Io4z/ZSagm4Tt/otYj2",
                            RoleId = 2,
                            Username = "zion_leuschke"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 652, DateTimeKind.Local).AddTicks(9299),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 652, DateTimeKind.Local).AddTicks(9319),
                            Email = "claudie@collins.ca",
                            FirstName = "Karlee",
                            LastName = "Rogahn",
                            Password = "$2a$11$kLFRcKVdutm8WRVqUcxxkO7IqzsM/W448eETMMZ3Msts3vNzrHmLu",
                            RoleId = 2,
                            Username = "leonard_maggio"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 800, DateTimeKind.Local).AddTicks(3831),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 800, DateTimeKind.Local).AddTicks(3852),
                            Email = "morgan@erdman.com",
                            FirstName = "Janice",
                            LastName = "Botsford",
                            Password = "$2a$11$Hp44skb3LcsyaXZBRTLX6eiL6XAegppQJgR0l/kmaYxhOQj2/MfXy",
                            RoleId = 2,
                            Username = "harry.kuhn"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 40, 942, DateTimeKind.Local).AddTicks(3083),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 40, 942, DateTimeKind.Local).AddTicks(3104),
                            Email = "yasmeen@sauerwhite.info",
                            FirstName = "Otha",
                            LastName = "Turner",
                            Password = "$2a$11$vlGqf4Yw/sgHojiKHT5jL..idXY0CrNgR/nMvtvFuSr/By0utGkYq",
                            RoleId = 2,
                            Username = "pink"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 84, DateTimeKind.Local).AddTicks(997),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 41, 84, DateTimeKind.Local).AddTicks(1016),
                            Email = "barry@collier.biz",
                            FirstName = "Ibrahim",
                            LastName = "Rice",
                            Password = "$2a$11$AtE7WWwKrTywD9c4PCbw8eUstdWf0qjXoSHWOo/R1FymTvXJG8Z/q",
                            RoleId = 2,
                            Username = "aryanna"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(1931),
                            DateOfBirth = new DateTime(2022, 8, 6, 17, 32, 41, 226, DateTimeKind.Local).AddTicks(1956),
                            Email = "elisha@block.co.uk",
                            FirstName = "Flavie",
                            LastName = "Hirthe",
                            Password = "$2a$11$3XTeu.1XaJyZiudlcVJJ.uw2brkzLlpb26IlHq5wqxGF4SDFfF6m2",
                            RoleId = 2,
                            Username = "rusty.yundt"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("metaLabel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMetas");
                });

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.HasOne("api.Model.Entity.Giustification", "Giustification")
                        .WithMany("Activitis")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("api.Model.Entity.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.HasOne("api.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("UserMetas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Navigation("Activitis");
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");

                    b.Navigation("UserMetas");
                });
#pragma warning restore 612, 618
        }
    }
}
