// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("marcatempo_server.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("marcatempo_server.Models.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("note")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("marcatempo_server.Models.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 1, 9, 1, 22, 21, 845, DateTimeKind.Local).AddTicks(8691),
                            UserId = 2,
                            token = "dasdsadasdsadewqrwrfewrewrwerewrewrewrew"
                        });
                });

            modelBuilder.Entity("marcatempo_server.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("marcatempo_server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 1, 9, 1, 22, 21, 696, DateTimeKind.Local).AddTicks(2029),
                            DateOfBirth = new DateTime(2022, 1, 9, 1, 22, 21, 697, DateTimeKind.Local).AddTicks(9631),
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$KCn5154uFM6i9UHy8ymnzeCZ9nt22IMUjqco3Qya41i9H.sCaNBxa",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 1, 9, 1, 22, 21, 845, DateTimeKind.Local).AddTicks(6920),
                            DateOfBirth = new DateTime(2022, 1, 9, 1, 22, 21, 845, DateTimeKind.Local).AddTicks(6972),
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$HVl73NbfJ17yp1ly33SatOofSZeRqogV8JYP6hYpqcy97GuEpj27e",
                            RoleId = 2,
                            Username = "Operator"
                        });
                });

            modelBuilder.Entity("marcatempo_server.Models.Activity", b =>
                {
                    b.HasOne("marcatempo_server.Models.Giustification", "Giustification")
                        .WithMany("Activitis")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("marcatempo_server.Models.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("marcatempo_server.Models.QRcode", b =>
                {
                    b.HasOne("marcatempo_server.Models.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("marcatempo_server.Models.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("marcatempo_server.Models.User", b =>
                {
                    b.HasOne("marcatempo_server.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("marcatempo_server.Models.Giustification", b =>
                {
                    b.Navigation("Activitis");
                });

            modelBuilder.Entity("marcatempo_server.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("marcatempo_server.Models.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");
                });
#pragma warning restore 612, 618
        }
    }
}
