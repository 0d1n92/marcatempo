// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220719174255_seedUserFaker")]
    partial class seedUserFaker
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(8765),
                            UserId = 2,
                            token = "dasdsadasdsadewqrwrfewrewrwerewrewrewrew"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(8768),
                            UserId = 3,
                            token = "lglglglgllglglglgllglglglgllglgglgllglglg"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9199),
                            UserId = 4,
                            token = "HH750941C"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9228),
                            UserId = 5,
                            token = "ZW019737B"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9249),
                            UserId = 6,
                            token = "JC579856C"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9270),
                            UserId = 7,
                            token = "OK323404A"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9322),
                            UserId = 8,
                            token = "SW352052D"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9344),
                            UserId = 9,
                            token = "LN078983D"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(9366),
                            UserId = 10,
                            token = "LB940954B"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 53, 555, DateTimeKind.Local).AddTicks(6519),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 53, 555, DateTimeKind.Local).AddTicks(6585),
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$nDSmsG.K6tUHMQTTxeMJTOU4FMgquMb/.ejzT1N/xqq6C1Cu0jHTe",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 53, 699, DateTimeKind.Local).AddTicks(8901),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 53, 699, DateTimeKind.Local).AddTicks(8932),
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$TFlcJKT7/7iOBq1J0cM3weo0FhqHHMwF3CBj.54ECWCoMLS48e0hW",
                            RoleId = 2,
                            Username = "Operator"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 53, 845, DateTimeKind.Local).AddTicks(7113),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 53, 845, DateTimeKind.Local).AddTicks(7174),
                            FirstName = "Jonh",
                            LastName = "Doe",
                            Password = "$2a$11$jRlrhXFg7TNCyIH1Hfdczum7Ob6ZCb07J2i65HlqVrOK/NKx6eN1a",
                            RoleId = 2,
                            Username = "Pippo"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 53, 990, DateTimeKind.Local).AddTicks(2708),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 53, 990, DateTimeKind.Local).AddTicks(2730),
                            FirstName = "Mathias",
                            LastName = "Sporer",
                            Password = "$2a$11$xOpNiN0p..VjIvNoUY/s7usg0JGsiQXSch9J7A8lyt8Y0sGOY6czC",
                            RoleId = 2,
                            Username = "berenice_morar"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 134, DateTimeKind.Local).AddTicks(8755),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 134, DateTimeKind.Local).AddTicks(8840),
                            FirstName = "Joan",
                            LastName = "Romaguera",
                            Password = "$2a$11$Gn8UanurBSpvkxGugoTnSOsLF.ZL.nyO4WnGXxdIGxkHmEuMMpYj.",
                            RoleId = 2,
                            Username = "christa.thiel"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 278, DateTimeKind.Local).AddTicks(9657),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 278, DateTimeKind.Local).AddTicks(9684),
                            FirstName = "Angie",
                            LastName = "Ledner",
                            Password = "$2a$11$0H7tJ1PxSn0G6XDjQs63vOgHLrfuocZehsVnHXAYdA0kmoc7H6pFK",
                            RoleId = 2,
                            Username = "earlene"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 423, DateTimeKind.Local).AddTicks(1409),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 423, DateTimeKind.Local).AddTicks(1431),
                            FirstName = "Joana",
                            LastName = "Mosciski",
                            Password = "$2a$11$rw6av3y4nbnZnK4j3iZkIO/HQJaNU/1.IZAU7uUC.d3OwT0MvQUJ.",
                            RoleId = 2,
                            Username = "curt"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 567, DateTimeKind.Local).AddTicks(1657),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 567, DateTimeKind.Local).AddTicks(1688),
                            FirstName = "Shea",
                            LastName = "Marks",
                            Password = "$2a$11$aKZ4/eBByaaEqw76ekuSTO7keD9VpHg0GGLwSaTSzQGdMPRE3spti",
                            RoleId = 2,
                            Username = "diana.bernhard"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 711, DateTimeKind.Local).AddTicks(3834),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 711, DateTimeKind.Local).AddTicks(3861),
                            FirstName = "Lambert",
                            LastName = "Hackett",
                            Password = "$2a$11$J9Be8mg9c9S/69CVq1QLdeU.g6splrYY5Ljwb/0.WzIPXdy5UMd4a",
                            RoleId = 2,
                            Username = "saul_swaniawski"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(8330),
                            DateOfBirth = new DateTime(2022, 7, 19, 19, 42, 54, 857, DateTimeKind.Local).AddTicks(8357),
                            FirstName = "Liliana",
                            LastName = "Wintheiser",
                            Password = "$2a$11$U68wPCJGK5A3HkIfD6lQy.yk04QWejN/6jnYIt2EMSQOhieFWFGFG",
                            RoleId = 2,
                            Username = "stephany.lakin"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("metaLabel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMetas");
                });

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.HasOne("api.Model.Entity.Giustification", "Giustification")
                        .WithMany("Activitis")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("api.Model.Entity.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.HasOne("api.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Navigation("Activitis");
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");
                });
#pragma warning restore 612, 618
        }
    }
}
