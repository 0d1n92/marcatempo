// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Helpers;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220730231515_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GiustificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiustificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Giustifications");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("token")
                        .IsUnique();

                    b.ToTable("QRcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7422),
                            UserId = 2,
                            token = "81a130d2-502f-4cf1-a376-63edeb000e9f"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7427),
                            UserId = 3,
                            token = "67c5064b-7160-4d05-a62e-1799f0d13270"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7451),
                            UserId = 4,
                            token = "860b05e5-a462-4660-a438-18ab536c2bee"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7453),
                            UserId = 5,
                            token = "15794b8a-be18-4c51-8c6a-4eb2d066da01"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7455),
                            UserId = 6,
                            token = "11e2ba74-2038-4044-b121-63248df0d048"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7457),
                            UserId = 7,
                            token = "f04e7c53-d221-4523-be89-8da0efd774c3"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7459),
                            UserId = 8,
                            token = "d8fcec27-a178-4164-bbc5-398232b207c1"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7460),
                            UserId = 9,
                            token = "3c790b7c-e480-4150-b9ac-7968b1f9dc88"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(7467),
                            UserId = 10,
                            token = "a18f0984-1cde-4ba5-9366-3aa14c8ed3ca"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All Permission",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Only marking and show",
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 13, 902, DateTimeKind.Local).AddTicks(8235),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 13, 902, DateTimeKind.Local).AddTicks(8280),
                            Email = "admin@mail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "$2a$11$T37BPZdYjcRe2QyRXM27h.F.3JXTNUV43vcrvBUBuR2oKBzGefzY2",
                            RoleId = 1,
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 50, DateTimeKind.Local).AddTicks(9688),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 50, DateTimeKind.Local).AddTicks(9761),
                            Email = "operator@mail.com",
                            FirstName = "operator",
                            LastName = "operator",
                            Password = "$2a$11$j00A22I1jZGgSnHer.k.BOMPzGUsByj35cDX7v7HsGjWLssJPXnwi",
                            RoleId = 2,
                            Username = "Operator"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 199, DateTimeKind.Local).AddTicks(6678),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 199, DateTimeKind.Local).AddTicks(6770),
                            Email = "pippo@mail.com",
                            FirstName = "Jonh",
                            LastName = "Doe",
                            Password = "$2a$11$avPxGVtMx66uU8siqLHrK.08BfzaMsUvP1.sa4wmpF8PAZsafEXlm",
                            RoleId = 2,
                            Username = "Pippo"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 347, DateTimeKind.Local).AddTicks(9860),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 347, DateTimeKind.Local).AddTicks(9879),
                            Email = "destinee_rowe@morarkeeling.uk",
                            FirstName = "Maia",
                            LastName = "Hermiston",
                            Password = "$2a$11$8prUH2./1w5osWcfDeSLZOBVrE9qGUAsYQkrAGH8.YgfbfArJs58S",
                            RoleId = 2,
                            Username = "valentin"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 496, DateTimeKind.Local).AddTicks(779),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 496, DateTimeKind.Local).AddTicks(798),
                            Email = "stefan_roberts@pfannerstill.biz",
                            FirstName = "Jett",
                            LastName = "Maggio",
                            Password = "$2a$11$XPNOezyjnL4i/FyXLNzpL.8/vFqsY0FUd.nYwR8HvRxxGgwUH1QeK",
                            RoleId = 2,
                            Username = "dejah_thiel"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 647, DateTimeKind.Local).AddTicks(3942),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 647, DateTimeKind.Local).AddTicks(3960),
                            Email = "joany@parisian.co.uk",
                            FirstName = "Johan",
                            LastName = "Klocko",
                            Password = "$2a$11$eKZIoytVYKa9Tl66q0hdV.CTKN16PXsaV9X6PkxEyEBb5/9CKUc.e",
                            RoleId = 2,
                            Username = "louisa"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 795, DateTimeKind.Local).AddTicks(2161),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 795, DateTimeKind.Local).AddTicks(2181),
                            Email = "stanford@vonroob.co.uk",
                            FirstName = "Aditya",
                            LastName = "Connelly",
                            Password = "$2a$11$bJgyZp/Gsvn1KLoyeIyEtea3O.DtDUhCCtfY96lj5urSv7NHh4eg.",
                            RoleId = 2,
                            Username = "haylee"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 14, 943, DateTimeKind.Local).AddTicks(7140),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 14, 943, DateTimeKind.Local).AddTicks(7161),
                            Email = "allie.dickens@schustermedhurst.biz",
                            FirstName = "Lempi",
                            LastName = "Hyatt",
                            Password = "$2a$11$3Bu.3C0Zu7guHoCRwcRipuAOlU0Hc4AbYGUlNKW.2WRRKvVu57vqy",
                            RoleId = 2,
                            Username = "zola.beatty"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 92, DateTimeKind.Local).AddTicks(5292),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 15, 92, DateTimeKind.Local).AddTicks(5312),
                            Email = "leanne@connelly.biz",
                            FirstName = "Cara",
                            LastName = "O'Connell",
                            Password = "$2a$11$z3ZvxLLcZOZch7a8BfBd4e5grnARkV5lcht/pBXqJRhOwm6zw4c1a",
                            RoleId = 2,
                            Username = "gail_halvorson"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(6904),
                            DateOfBirth = new DateTime(2022, 7, 31, 1, 15, 15, 240, DateTimeKind.Local).AddTicks(6922),
                            Email = "kayden@grant.co.uk",
                            FirstName = "Guillermo",
                            LastName = "Legros",
                            Password = "$2a$11$tCDtilQV8KoK5nhHX3gopeR9slE4ctkC8Lg8VN4bABDbxzEg8.YqG",
                            RoleId = 2,
                            Username = "gaylord_kilback"
                        });
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("metaLabel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMetas");
                });

            modelBuilder.Entity("api.Model.Entity.Action", b =>
                {
                    b.HasOne("api.Model.Entity.Giustification", "Giustification")
                        .WithMany("Activitis")
                        .HasForeignKey("GiustificationId");

                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId");

                    b.Navigation("Giustification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.QRcode", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("api.Model.Entity.QRcode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.HasOne("api.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Model.Entity.UserMeta", b =>
                {
                    b.HasOne("api.Model.Entity.User", "User")
                        .WithMany("UserMetas")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Model.Entity.Giustification", b =>
                {
                    b.Navigation("Activitis");
                });

            modelBuilder.Entity("api.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Model.Entity.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("QRCode");

                    b.Navigation("UserMetas");
                });
#pragma warning restore 612, 618
        }
    }
}
